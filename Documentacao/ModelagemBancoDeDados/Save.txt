--- DOMINIO

CREATE DOMAIN TIPO_LOGICO AS
CHAR(1) CHARACTER SET NONE
DEFAULT 'N'
CHECK (VALUE IN ('S','N'))
COLLATE NONE;

COMMENT ON DOMAIN TIPO_LOGICO IS
'S-SIM   N-NAO';

--- TABELAS

CREATE TABLE PESSOA(
    ID_PESSOA INTEGER NOT NULL,
    NOME VARCHAR(50) NOT NULL,
    CPF CHAR(11) NOT NULL,
    CLASSE01 TIPO_LOGICO
    );

CREATE TABLE PESSOA_FUNCIONARIO(
    ID_PESSOA_FUNCIONARIO INTEGER NOT NULL,
    CD_PESSOA INTEGER NOT NULL,
    CD_CARGO INTEGER NOT NULL,
    DATA_ADMISSAO DATE DEFAULT CURRENT_DATE,
    MATRICULA CHAR(10),
    PIS CHAR(12)
    );

CREATE TABLE EMPRESA(
    ID_EMPRESA INTEGER NOT NULL,
    DESCRICAO VARCHAR(50) NOT NULL
    );

CREATE TABLE CARGO(
    ID_CARGO INTEGER NOT NULL,
    DESCRICAO VARCHAR(30) NOT NULL,
    CD_EMPRESA INTEGER NOT NULL
    );

CREATE TABLE CARGO_HISTORICO(
    ID_CARGO_HISTORICO INTEGER NOT NULL,
    CD_PESSOA INTEGER NOT NULL,
    CD_CARGO INTEGER NOT NULL,
    CD_EMPRESA INTEGER NOT NULL,
    DATA_ADMISSAO DATE NOT NULL,
    DATA_DEMISSAO DATE DEFAULT CURRENT_DATE NOT NULL
    );

CREATE TABLE FOLHA_PONTO(
    ID_FOLHA_PONTO INTEGER NOT NULL,
    CD_PESSOA_FUNCIONARIO INTEGER NOT NULL,
    DATA DATE DEFAULT CURRENT_DATE NOT NULL,
    HORA_INICIO_1 TIME DEFAULT CURRENT_TIME NOT NULL,
    HORA_FINAL_1 TIME DEFAULT CURRENT_TIME,
    HORA_INICIO_2 TIME DEFAULT CURRENT_TIME,
    HORA_FINAL_2 TIME DEFAULT CURRENT_TIME,
    PERIODO_INTERVALO TIME,
    QT_HORA_TRABALHADA_DIA TIME
    );

--- INTEGRIDADE

ALTER TABLE PESSOA ADD CONSTRAINT PK_PESSOA PRIMARY KEY (ID_PESSOA);
ALTER TABLE PESSOA_FUNCIONARIO ADD CONSTRAINT PK_PESSOA_FUNCIONARIO PRIMARY KEY (ID_PESSOA_FUNCIONARIO);
ALTER TABLE FOLHA_PONTO ADD CONSTRAINT PK_FOLHA_PONTO PRIMARY KEY (ID_FOLHA_PONTO);
ALTER TABLE EMPRESA ADD CONSTRAINT PK_EMPRESA PRIMARY KEY (ID_EMPRESA);
ALTER TABLE CARGO ADD CONSTRAINT PK_CARGO PRIMARY KEY (ID_CARGO);
ALTER TABLE CARGO_HISTORICO ADD CONSTRAINT PK_CARGO_HISTORICO PRIMARY KEY (ID_CARGO_HISTORICO);

ALTER TABLE PESSOA_FUNCIONARIO ADD CONSTRAINT FK_PES_FUNCIONARIO_PESSOA FOREIGN KEY (CD_PESSOA) REFERENCES PESSOA (ID_PESSOA);
ALTER TABLE PESSOA_FUNCIONARIO ADD CONSTRAINT FK_PES_FUNCIONARIO_CARGO FOREIGN KEY (CD_CARGO) REFERENCES CARGO (ID_CARGO);
ALTER TABLE CARGO_HISTORICO ADD CONSTRAINT FK_CAR_HISTORICO_PESSOA FOREIGN KEY (CD_PESSOA) REFERENCES PESSOA (ID_PESSOA);
ALTER TABLE CARGO_HISTORICO ADD CONSTRAINT FK_CAR_HISTORICO_CARGO FOREIGN KEY (CD_CARGO) REFERENCES CARGO (ID_CARGO);
ALTER TABLE CARGO ADD CONSTRAINT FK_CARGO_EMPRESA FOREIGN KEY (CD_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA);
ALTER TABLE FOLHA_PONTO ADD CONSTRAINT FK_FOL_PONTO_PES_FUNCIONARIO FOREIGN KEY (CD_PESSOA_FUNCIONARIO) REFERENCES PESSOA_FUNCIONARIO (ID_PESSOA_FUNCIONARIO);

-- AUTO INCREMENTO

CREATE GENERATOR GEN_PESSOA;
CREATE GENERATOR GEN_PESSOA_FUNCIONARIO;
CREATE GENERATOR GEN_EMPRESA;
CREATE GENERATOR GEN_CARGO;
CREATE GENERATOR GEN_CARGO_HISTORICO;
CREATE GENERATOR GEN_FOLHA_PONTO;

CREATE TRIGGER TBI_PESSOA FOR PESSOA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_PESSOA IS NULL) THEN
  BEGIN
    NEW.ID_PESSOA = GEN_ID(GEN_PESSOA, 1);
  END
END;

CREATE TRIGGER TBI_PESSOA_FUNCIONARIO FOR PESSOA_FUNCIONARIO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_PESSOA_FUNCIONARIO IS NULL) THEN
  BEGIN
    NEW.ID_PESSOA_FUNCIONARIO = GEN_ID(GEN_PESSOA_FUNCIONARIO, 1);
  END
END;

CREATE TRIGGER TBI_EMPRESA FOR EMPRESA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_EMPRESA IS NULL) THEN
  BEGIN
    NEW.ID_EMPRESA = GEN_ID(GEN_EMPRESA, 1);
  END
END;

CREATE TRIGGER TBI_CARGO FOR CARGO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_CARGO IS NULL) THEN
  BEGIN
    NEW.ID_CARGO = GEN_ID(GEN_CARGO, 1);
  END
END;

CREATE TRIGGER TBI_CARGO_HISTORICO FOR CARGO_HISTORICO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_CARGO_HISTORICO IS NULL) THEN
  BEGIN
    NEW.ID_CARGO_HISTORICO = GEN_ID(GEN_CARGO_HISTORICO, 1);
  END
END;

CREATE TRIGGER TBI_FOLHA_PONTO FOR FOLHA_PONTO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF(NEW.ID_FOLHA_PONTO IS NULL) THEN
  BEGIN
    NEW.ID_FOLHA_PONTO = GEN_ID(GEN_FOLHA_PONTO, 1);
  END
END;



